{"version":3,"file":"static/js/211.859f1d40.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","pages/MoviedetailsPage.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { tmdbAPI } from '../../config';\r\n\r\nfunction MovieCard({ item }) {\r\n    const { title, poster_path, release_date, vote_average, id } = item;\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className=\"movies-card rounded-lg p-3 bg-slate-800 mb-8 select-none\">\r\n            <img\r\n                src={tmdbAPI.image500(poster_path)}\r\n                alt=\"\"\r\n                className=\"w-full h-[220px] object-cover rounded-lg mb-2\"\r\n            />\r\n            <h3 className=\"text-white text-base font-semibold mb-3 h-[24px] overflow-hidden title-movies\">\r\n                {title}\r\n            </h3>\r\n            <div className=\"flex items-center justify-between text-gray-400 text-xs mb-10\">\r\n                <span>{new Date(release_date).getFullYear()}</span>\r\n                <span className=\"flex items-center\">\r\n                    {vote_average}{' '}\r\n                    <span className=\"text-yellow-400 ml-1\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-5 w-5\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\"\r\n                        >\r\n                            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                        </svg>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <button\r\n                onClick={() => navigate(`/movie/${id}`)}\r\n                className=\"flex justify-center text-white items-center w-full px-5 py-[6px] bg-primary rounded-md hover:bg-pink-600 text-sm\"\r\n            >\r\n                Watch Now{' '}\r\n                <span className=\"pl-1\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-6 w-6\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\r\n                        />\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                        />\r\n                    </svg>\r\n                </span>{' '}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n","import { useParams } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport useSWR from 'swr';\r\nimport MovieCard from '../components/movie/MovieCard';\r\nimport { fetcher, tmdbAPI } from '../config';\r\n\r\nfunction MoviedetailsPage() {\r\n    const { movieId } = useParams();\r\n    const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n    if (!data) return null;\r\n    const { backdrop_path, poster_path, title, genres, overview } = data;\r\n    return (\r\n        <div className=\"page-container pb-10\">\r\n            <div className=\"w-full h-[600px] relative\">\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-50\"></div>\r\n                <div\r\n                    className=\"w-full h-full bg-cover bg-no-repeat\"\r\n                    style={{\r\n                        backgroundImage: `url(${tmdbAPI.imageOriginal(\r\n                            backdrop_path,\r\n                        )})`,\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[180px] relative z-10 pb-10\">\r\n                <img\r\n                    src={tmdbAPI.imageOriginal(poster_path)}\r\n                    alt=\"\"\r\n                    className=\"w-full h-full object-cover rounded-xl\"\r\n                />\r\n            </div>\r\n            <h1 className=\"text-center text-4xl font-bold text-white mb-10\">\r\n                {title}\r\n            </h1>\r\n            {genres.length > 0 && (\r\n                <div className=\"flex items-center justify-center gap-x-5 mb-10\">\r\n                    {genres.map((item) => (\r\n                        <span\r\n                            key={item.id}\r\n                            className=\"py-1 px-5 border border-primary text-primary rounded-full\"\r\n                        >\r\n                            {item.name}\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <p className=\"text-center leading-relaxed max-w-[600px] mx-auto mb-10\">\r\n                {overview}\r\n            </p>\r\n            <MovieCredits></MovieCredits>\r\n            <MovieVideos></MovieVideos>\r\n            <MovieSimilar></MovieSimilar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MovieCredits() {\r\n    const { movieId } = useParams();\r\n    const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, 'credits'), fetcher);\r\n    if (!data) return null;\r\n    const { cast } = data;\r\n    if (!cast || cast.length <= 0) return null;\r\n\r\n    return (\r\n        <div className=\"py-10\">\r\n            <h2 className=\"text-center text-3xl mb-10\">Casta</h2>\r\n            <div className=\"grid grid-cols-4 gap-5\">\r\n                {cast.slice(0, 4).map((item) => (\r\n                    <div className=\"cast-item\" key={item.id}>\r\n                        <img\r\n                            src={tmdbAPI.imageOriginal(item.profile_path)}\r\n                            alt=\"\"\r\n                            className=\"w-full h-[300px] object-cover rounded-lg mb-3\"\r\n                        />\r\n                        <h3 className=\"text-xl \">{item.name}</h3>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MovieVideos() {\r\n    const { movieId } = useParams();\r\n    const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, 'videos'), fetcher);\r\n    if (!data) return null;\r\n    const { results } = data;\r\n    if (!results || results.length <= 0) return null;\r\n\r\n    return (\r\n        <div className=\"py-10\">\r\n            <div className=\"flex flex-col gap-10\">\r\n                {results.slice(0, 2).map((item) => (\r\n                    <div key={item.id} className=\"\">\r\n                        <h3 className=\"mb-5 text-xl font-medium p-3 bg-slate-800 inline-block\">\r\n                            {item.name}\r\n                        </h3>\r\n                        <div className=\"w-full aspect-video\">\r\n                            <iframe\r\n                                width=\"699\"\r\n                                height=\"393\"\r\n                                src={`https://www.youtube.com/embed/${item.key}`}\r\n                                title=\"YouTube video player\"\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; \r\n                        autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                                className=\"w-full h-full object-fill\"\r\n                            ></iframe>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n    const { movieId } = useParams();\r\n    const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, 'similar'), fetcher);\r\n    if (!data) return null;\r\n    const { results } = data;\r\n    if (!results || results.length <= 0) return null;\r\n\r\n    return (\r\n        <div className=\"py-10\">\r\n            <h2 className=\"text-3xl font-medium mb-10\">Similar Movies</h2>\r\n            <div className=\"movie-list\">\r\n                <Swiper\r\n                    grabCursor={true}\r\n                    spaceBetween={40}\r\n                    slidesPerView={'auto'}\r\n                >\r\n                    {results.length > 0 &&\r\n                        results.map((item, i) => (\r\n                            <SwiperSlide key={item.id}>\r\n                                <MovieCard item={item}></MovieCard>\r\n                            </SwiperSlide>\r\n                        ))}\r\n                </Swiper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviedetailsPage;\r\n"],"names":["item","title","poster_path","release_date","vote_average","id","navigate","useNavigate","className","src","tmdbAPI","alt","Date","getFullYear","xmlns","viewBox","fill","d","onClick","stroke","strokeWidth","strokeLinecap","strokeLinejoin","MovieCredits","movieId","useParams","data","useSWR","fetcher","cast","length","slice","map","profile_path","name","MovieVideos","results","width","height","key","frameBorder","allow","allowFullScreen","MovieSimilar","grabCursor","spaceBetween","slidesPerView","i","backdrop_path","genres","overview","style","backgroundImage"],"sourceRoot":""}